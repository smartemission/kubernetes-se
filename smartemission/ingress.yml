apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: geoserver
  namespace: smartemission
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - secretName: pdok-smartemission-nl-tls
    hosts:
    - pdok.smartemission.nl
  rules:
  - host: pdok.smartemission.nl
    http:
      paths:
      - path: /geoserver
        backend:
          serviceName: geoserver-service
          servicePort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: geoserver-basic-auth
  namespace: smartemission
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  rules:
  - host: pdok.smartemission.nl
    http:
      paths:
      - path: /geoserver/web
        backend:
          serviceName: geoserver-service
          servicePort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sos52n
  namespace: smartemission
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/52n-sos-webapp"
spec:
  rules:
  - host: pdok.smartemission.nl
    http:
      paths:
      - path: /sos52n
        backend:
          serviceName: sos52n-service
          servicePort: 8080
      - path: /52n-sos-webapp
        backend:
          serviceName: sos52n-service
          servicePort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sosemu
  namespace: smartemission
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Script-Name /sosemu;
spec:
  rules:
  - host: pdok.smartemission.nl
    http:
      paths:
      - path: /sosemu
        backend:
          serviceName: sosemu-service
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: smartapp
  namespace: smartemission
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
  - host: pdok.smartemission.nl
    http:
      paths:
      - path: /smartapp
        backend:
          serviceName: smartapp-service
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: waalkade
  namespace: smartemission
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
  - host: pdok.smartemission.nl
    http:
      paths:
      - path: /waalkade
        backend:
          serviceName: waalkade-service
          servicePort: 80
