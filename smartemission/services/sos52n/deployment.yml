apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: sos52n-deployment
  namespace: smartemission
  labels:
    app: sos52n
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sos52n
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: sos52n
    spec:
      containers:
      - name: sos52n
        image: smartemission/se-sos52n:4.3.7-7
        livenessProbe:
          httpGet:
            path: /sos52n?service=SOS&request=GetCapabilities
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /sos52n?service=SOS&request=GetCapabilities
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        env:
          - name: SOS_USERNAME
            valueFrom:
              secretKeyRef:
                name: sos52n
                key: username
          - name: SOS_PASSWD
            valueFrom:
              secretKeyRef:
                name: sos52n
                key: password
          - name: DB_HOSTNAME
            value: "postgres"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: postgres
                key: username
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
          - name: SOS_DB_SCHEMA
            value: "sos52n1"
          - name: SOS_SERVICE_URL
            value: "https://pdok.smartemission.nl/sos52n/service"
        resources:
          limits:
            cpu: "500m"
            memory: "4.0Gi"
          requests:
            cpu: "500m"
            memory: "2.0Gi"
        ports:
        - containerPort: 8080